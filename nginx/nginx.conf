# Path: nginx/nginx.conf

worker_processes 1;

events {
  worker_connections 1024;
}

http {
  proxy_cache_path /var/cache/nginx keys_zone=astro_ssg_cache:1m inactive=5m max_size=512m;

  upstream web {
    server web:3000;
  }

  upstream api {
    server api:8000;
  }

  server {
    gzip on;
    gzip_types text/css application/javascript application/json image/svg+xml;
    gzip_min_length 1000;

    listen 7800;
    server_name localhost;

    location / {
      proxy_pass http://web;
      proxy_http_version 1.1;
      proxy_cache astro_ssg_cache;
      proxy_cache_key $uri;
      proxy_cache_valid 5m;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
      proxy_set_header Host $host;
      proxy_redirect off;
    }
  }

  # Para la API
  server {
    listen 7800;
    server_name api.localhost;
    location / {
      proxy_pass http://api;  # Suponiendo que "api" es el nombre del servicio en docker-compose.yml
      # ... (otros ajustes de proxy aquí)
    }
  }

  # Para el panel de administración
  server {
    listen 7800;
    server_name admin.localhost;
    location / {
      proxy_pass http://web;  # Asumiendo que "admin" es otro servicio en docker-compose.yml
      # ... (otros ajustes de proxy aquí)
    }
  }

  # Para otros subdominios dinámicos
  server {
    listen 7800;
    server_name ~^(?<subdomain>.+)\.localhost$;
    location / {
      proxy_pass http://web;  # Redirige todos los demás subdominios al servicio "web"
      # ... (otros ajustes de proxy aquí)
    }
  }
}